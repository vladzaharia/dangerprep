# =============================================================================
# WATCHTOWER ENVIRONMENT VARIABLES - COMPREHENSIVE EXAMPLE
# =============================================================================
# Complete configuration options for Watchtower container updater
# Reference: https://containrrr.dev/watchtower/arguments/

# -----------------------------------------------------------------------------
# System Configuration
# -----------------------------------------------------------------------------
# Installation Root Path
INSTALL_ROOT=${DANGERPREP_INSTALL_ROOT:-/opt/dangerprep}

# Timezone Configuration
TZ=America/Los_Angeles

# -----------------------------------------------------------------------------
# Core Watchtower Configuration
# -----------------------------------------------------------------------------
# Remove old images after updating (recommended)
WATCHTOWER_CLEANUP=true

# Remove anonymous volumes after updating (named volumes preserved)
WATCHTOWER_REMOVE_VOLUMES=false

# Schedule for automatic updates (cron format: sec min hour day month weekday)
# Default: 0 0 4 * * * (4 AM daily)
WATCHTOWER_SCHEDULE=0 0 4 * * *

# Poll interval in seconds (alternative to schedule, cannot use both)
WATCHTOWER_POLL_INTERVAL=86400

# Run once and exit (useful for manual updates)
WATCHTOWER_RUN_ONCE=false

# -----------------------------------------------------------------------------
# Container Selection
# -----------------------------------------------------------------------------
# Include stopped containers in monitoring
WATCHTOWER_INCLUDE_STOPPED=true

# Include restarting containers in monitoring
WATCHTOWER_INCLUDE_RESTARTING=false

# Revive stopped containers that have updated images
WATCHTOWER_REVIVE_STOPPED=false

# Monitor only containers with specific label
WATCHTOWER_LABEL_ENABLE=false

# Exclude containers with specific names (comma-separated)
WATCHTOWER_DISABLE_CONTAINERS=container1,container2

# Filter by scope (useful for multiple Watchtower instances)
WATCHTOWER_SCOPE=production

# -----------------------------------------------------------------------------
# Update Behavior
# -----------------------------------------------------------------------------
# Monitor only mode (check for updates but don't update)
WATCHTOWER_MONITOR_ONLY=false

# Don't restart containers after updating
WATCHTOWER_NO_RESTART=false

# Don't pull new images (only use local cache)
WATCHTOWER_NO_PULL=false

# Rolling restart (one container at a time)
WATCHTOWER_ROLLING_RESTART=false

# Stop timeout before forcing container shutdown
WATCHTOWER_TIMEOUT=10s

# Label takes precedence over command arguments
WATCHTOWER_LABEL_TAKE_PRECEDENCE=false

# -----------------------------------------------------------------------------
# Logging Configuration
# -----------------------------------------------------------------------------
# Log level (panic, fatal, error, warn, info, debug, trace)
WATCHTOWER_LOG_LEVEL=info

# Log format (Auto, LogFmt, Pretty, JSON)
WATCHTOWER_LOG_FORMAT=Auto

# Enable debug mode (alias for --log-level debug)
WATCHTOWER_DEBUG=false

# Enable trace mode (alias for --log-level trace, exposes credentials!)
WATCHTOWER_TRACE=false

# Disable ANSI color codes in logs
NO_COLOR=false

# -----------------------------------------------------------------------------
# Notification Configuration
# -----------------------------------------------------------------------------
# Enable notifications (email, slack, msteams, gotify, etc.)
WATCHTOWER_NOTIFICATIONS=email

# Disable startup notification message
WATCHTOWER_NO_STARTUP_MESSAGE=false

# Email Notifications
WATCHTOWER_NOTIFICATION_EMAIL_FROM=watchtower@example.com
WATCHTOWER_NOTIFICATION_EMAIL_TO=admin@example.com
WATCHTOWER_NOTIFICATION_EMAIL_SERVER=smtp.gmail.com
WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=587
# PROMPT[email]: Email server username - your email address for SMTP authentication
WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=your-email@gmail.com
# PROMPT[pw]: Email server password - app password for email notifications
WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=your-email-app-password
WATCHTOWER_NOTIFICATION_EMAIL_DELAY=0
WATCHTOWER_NOTIFICATION_EMAIL_SUBJECTTAG=[Watchtower]

# Slack Notifications
WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL=https://hooks.slack.com/services/...
WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER=watchtower
WATCHTOWER_NOTIFICATION_SLACK_CHANNEL=#general

# Microsoft Teams Notifications
WATCHTOWER_NOTIFICATION_MSTEAMS_HOOK=https://outlook.office.com/webhook/...

# Gotify Notifications
WATCHTOWER_NOTIFICATION_GOTIFY_URL=https://gotify.example.com
# PROMPT[pw]: Gotify token - get from your Gotify server settings
WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN=your-gotify-token

# Discord Notifications
WATCHTOWER_NOTIFICATION_DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/...
WATCHTOWER_NOTIFICATION_DISCORD_IDENTIFIER=watchtower

# Pushover Notifications
# PROMPT[OPTIONAL]: Pushover User Key - get from your Pushover account
WATCHTOWER_NOTIFICATION_PUSHOVER_USER=your-user-key
# PROMPT[pw,OPTIONAL]: Pushover App Token - get from your Pushover app settings
WATCHTOWER_NOTIFICATION_PUSHOVER_TOKEN=your-app-token

# -----------------------------------------------------------------------------
# HTTP API Configuration
# -----------------------------------------------------------------------------
# Enable HTTP API mode (updates triggered by HTTP requests)
WATCHTOWER_HTTP_API_UPDATE=false

# GENERATE[64]: HTTP API authentication token
WATCHTOWER_HTTP_API_TOKEN=change_me_api_token

# Keep periodic polls when HTTP API is enabled
WATCHTOWER_HTTP_API_PERIODIC_POLLS=false

# Enable metrics endpoint for Prometheus
WATCHTOWER_HTTP_API_METRICS=false

# -----------------------------------------------------------------------------
# Docker Configuration
# -----------------------------------------------------------------------------
# Docker host to connect to
DOCKER_HOST=unix:///var/run/docker.sock

# Docker API version
DOCKER_API_VERSION=1.24

# Enable TLS verification for Docker connection
DOCKER_TLS_VERIFY=false

# -----------------------------------------------------------------------------
# Advanced Configuration
# -----------------------------------------------------------------------------
# Warn on HEAD request failures (always, auto, never)
WATCHTOWER_WARN_ON_HEAD_FAILURE=auto

# Programmatic output format for scripts (v1)
WATCHTOWER_PORCELAIN=v1

# Health check mode (for Docker HEALTHCHECK)
WATCHTOWER_HEALTH_CHECK=false

# -----------------------------------------------------------------------------
# Security Configuration
# -----------------------------------------------------------------------------
# Use secrets files for sensitive configuration
WATCHTOWER_HTTP_API_TOKEN_FILE=/run/secrets/watchtower_api_token
WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD_FILE=/run/secrets/email_password
WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL_FILE=/run/secrets/slack_webhook
WATCHTOWER_NOTIFICATION_MSTEAMS_HOOK_FILE=/run/secrets/teams_webhook
WATCHTOWER_NOTIFICATION_GOTIFY_TOKEN_FILE=/run/secrets/gotify_token

services:
  portal:
    build:
      context: ../../..
      dockerfile: docker/infrastructure/portal/Dockerfile
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/hostapd:/etc/hostapd:ro
    env_file:
      - compose.env
    ports:
      - "3000:3000"
    user: root
    environment:
      # Runtime environment variables for the React app
      - VITE_WIFI_SSID=${WIFI_SSID}
      - VITE_WIFI_PASSWORD=${WIFI_PASSWORD}

      # Base domain and service subdomains for dynamic URL construction
      - VITE_BASE_DOMAIN=${BASE_DOMAIN}

      # Main services
      - VITE_JELLYFIN_SUBDOMAIN=${JELLYFIN_SUBDOMAIN}
      - VITE_KIWIX_SUBDOMAIN=${KIWIX_SUBDOMAIN}
      - VITE_ROMM_SUBDOMAIN=${ROMM_SUBDOMAIN}

      # Maintenance services
      - VITE_DOCMOST_SUBDOMAIN=${DOCMOST_SUBDOMAIN}
      - VITE_ONEDEV_SUBDOMAIN=${ONEDEV_SUBDOMAIN}
      - VITE_TRAEFIK_SUBDOMAIN=${TRAEFIK_SUBDOMAIN}
      - VITE_KOMODO_SUBDOMAIN=${KOMODO_SUBDOMAIN}
      - VITE_PORTAINER_SUBDOMAIN=${PORTAINER_SUBDOMAIN}
    labels:
      - "traefik.enable=true"

      # # Portal - Internal (.danger domain with step-ca)
      # - "traefik.http.routers.portal-internal.rule=Host(`portal.danger`)"
      # - "traefik.http.routers.portal-internal.entrypoints=websecure"
      # - "traefik.http.routers.portal-internal.tls.certresolver=step-ca"
      # - "traefik.http.routers.portal-internal.service=portal"

      # Portal - External (.danger.diy domain with Let's Encrypt)
      - "traefik.http.routers.portal-external.rule=Host(`portal.danger.diy`)"
      - "traefik.http.routers.portal-external.entrypoints=websecure"
      - "traefik.http.routers.portal-external.tls.certresolver=letsencrypt-cloudflare"
      - "traefik.http.routers.portal-external.service=portal"

      # Portal - External (.argos.surf domain with Let's Encrypt)
      - "traefik.http.routers.portal-argos.rule=Host(`portal.argos.surf`)"
      - "traefik.http.routers.portal-argos.entrypoints=websecure"
      - "traefik.http.routers.portal-argos.tls.certresolver=letsencrypt-cloudflare"
      - "traefik.http.routers.portal-argos.service=portal"

      # Service definition (shared by both routers)
      - "traefik.http.services.portal.loadbalancer.server.port=3000"

      # DNS registration
      - "dns.register=portal"

      # Service discovery
      - "service.type=public"
      - "service.name=Portal"
      - "service.description=This portal! Come back anytime to see all the services"
      - "service.icon=home"

      # Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - traefik
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  traefik:
    external: true
    name: traefik

services:
  step-ca:
    image: smallstep/step-ca:latest
    restart: unless-stopped
    user: root
    ports:
      - "9000:9000"
    volumes:
      - step-ca-data:/home/step
    env_file:
      - compose.env
    # Prevent TTY allocation issues in Docker
    tty: false
    stdin_open: false
    labels:
      - "traefik.enable=true"
      
      # CA API - Internal (.danger domain with step-ca)
      - "traefik.http.routers.step-ca-internal.rule=Host(`ca.danger`)"
      - "traefik.http.routers.step-ca-internal.entrypoints=websecure"
      - "traefik.http.routers.step-ca-internal.tls.certresolver=step-ca"
      - "traefik.http.routers.step-ca-internal.service=step-ca"

      # CA API - External (.danger.diy domain with Let's Encrypt)
      - "traefik.http.routers.step-ca-external.rule=Host(`ca.danger.diy`)"
      - "traefik.http.routers.step-ca-external.entrypoints=websecure"
      - "traefik.http.routers.step-ca-external.tls.certresolver=letsencrypt-cloudflare"
      - "traefik.http.routers.step-ca-external.service=step-ca"

      # Service definition (shared by both routers)
      - "traefik.http.services.step-ca.loadbalancer.server.port=9000"
      - "traefik.http.services.step-ca.loadbalancer.server.scheme=https"

      # DNS registration
      - "dns.register=ca"

      # Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - traefik
      - step-ca
    healthcheck:
      test: ["CMD", "step", "ca", "health", "--ca-url", "https://localhost:9000", "--root", "/home/step/certs/root_ca.crt"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # ca-download:
  #   build:
  #     context: ../../..
  #     dockerfile: docker/infrastructure/step-ca/Dockerfile
  #   restart: unless-stopped
  #   volumes:
  #     - step-ca-data:/ca-data:ro
  #     - step-ca-certs:/ca-data/certs:ro
  #     - cdn-assets:/cdn-assets
  #   env_file:
  #     - compose.env
  #   environment:
  #     # Override specific settings for ca-download service
  #     - CA_NAME=${DOCKER_STEPCA_INIT_NAME:-DangerPrep Internal CA}
  #     - CA_URL=https://step-ca-step-ca-1:9000
  #   labels:
  #     - "traefik.enable=true"

  #     # HTTP-only download service (no HTTPS required for initial setup)
  #     - "traefik.http.routers.ca-download.rule=Host(`root.danger`)"
  #     - "traefik.http.routers.ca-download.entrypoints=web"
  #     - "traefik.http.services.ca-download.loadbalancer.server.port=8080"

  #     # DNS registration
  #     - "dns.register=root.danger"

  #     # App registration for discovery
  #     - "app.register=true"
  #     - "app.name=Certificate Authority"
  #     - "app.description=SSL Certificate Management"
  #     - "app.icon=shield-check"
  #     - "app.category=Security"
  #     - "app.url=https://root.danger"
  #     - "app.version=1.0.0"

  #     # Watchtower
  #     - "com.centurylinklabs.watchtower.enable=true"
  #   networks:
  #     - traefik
  #     - step-ca
  #   depends_on:
  #     - step-ca
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 10s

volumes:
  step-ca-data:
    driver: local
  cdn-assets:
    driver: local

networks:
  traefik:
    external: true
    name: traefik
  step-ca:
    driver: bridge
    name: step-ca

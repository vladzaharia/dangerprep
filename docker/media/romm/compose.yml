services:
  romm:
    image: rommapp/romm:latest
    restart: unless-stopped
    volumes:
      - romm-config:/romm/config
      - romm-assets:/romm/assets
      - romm-resources:/romm/resources
      - /content/games/roms:/romm/library:ro
      - ${INSTALL_ROOT}/nfs/games:/nfs/games:ro
      # Mount secrets as files for enhanced security
      - ${INSTALL_ROOT}/secrets/romm/auth_secret_key:/run/secrets/romm_auth_secret_key:ro
      - ${INSTALL_ROOT}/secrets/romm/db_password:/run/secrets/db_password:ro
      - ${INSTALL_ROOT}/secrets/romm/redis_password:/run/secrets/redis_password:ro
    env_file:
      - compose.env
    environment:
      # Use file-based secrets for enhanced security
      - ROMM_AUTH_SECRET_KEY_FILE=/run/secrets/romm_auth_secret_key
      - DB_PASSWD_FILE=/run/secrets/db_password
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password
    labels:
      - "traefik.enable=true"

      # RomM - Internal (.danger domain with step-ca)
      - "traefik.http.routers.romm-internal.rule=Host(`retro.danger`)"
      - "traefik.http.routers.romm-internal.entrypoints=websecure"
      - "traefik.http.routers.romm-internal.tls.certresolver=step-ca"
      - "traefik.http.routers.romm-internal.service=romm"

      # RomM - External (.danger.diy domain with Let's Encrypt)
      - "traefik.http.routers.romm-external.rule=Host(`retro.danger.diy`)"
      - "traefik.http.routers.romm-external.entrypoints=websecure"
      - "traefik.http.routers.romm-external.tls.certresolver=letsencrypt-cloudflare"
      - "traefik.http.routers.romm-external.service=romm"

      # RomM - External (.argos.surf domain with Let's Encrypt)
      - "traefik.http.routers.romm-argos.rule=Host(`retro.argos.surf`)"
      - "traefik.http.routers.romm-argos.entrypoints=websecure"
      - "traefik.http.routers.romm-argos.tls.certresolver=letsencrypt-cloudflare"
      - "traefik.http.routers.romm-argos.service=romm"

      # Service definition (shared by both routers)
      - "traefik.http.services.romm.loadbalancer.server.port=8080"

      # DNS registration
      - "dns.register=romm"

      # Watchtower
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - traefik
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  romm-config:
    driver: local
  romm-assets:
    driver: local
  romm-resources:
    driver: local

networks:
  traefik:
    external: true
    name: traefik

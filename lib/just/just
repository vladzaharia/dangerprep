#!/bin/sh
# DangerPrep Portable Just Wrapper
# Prefers system-installed just, falls back to platform-specific binary

# Check if just is available in PATH first
if command -v just >/dev/null 2>&1; then
    # Use system-installed just
    exec just "$@"
fi

# Fall back to bundled binary
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"

# Platform detection
detect_platform() {
    case "$(uname -s)" in
        Linux*)     os="linux" ;;
        Darwin*)    os="darwin" ;;
        CYGWIN*|MINGW*|MSYS*) os="windows" ;;
        *)          echo "Unsupported operating system: $(uname -s)" >&2; exit 1 ;;
    esac

    case "$(uname -m)" in
        x86_64|amd64)   arch="x86_64" ;;
        aarch64|arm64)  arch="aarch64" ;;
        armv7l)         arch="armv7" ;;
        arm*)           arch="arm" ;;
        *)              echo "Unsupported architecture: $(uname -m)" >&2; exit 1 ;;
    esac

    echo "${os}-${arch}"
}

# Get platform-specific binary name
PLATFORM=$(detect_platform)
JUST_BINARY="$SCRIPT_DIR/just-$PLATFORM"

# Check if binary exists
if [ ! -f "$JUST_BINARY" ]; then
    echo "Just binary for platform $PLATFORM not found: $JUST_BINARY" >&2
    echo "Run '$SCRIPT_DIR/download.sh' to download platform-specific binaries" >&2
    echo "Or install just system-wide: https://github.com/casey/just#installation" >&2
    exit 1
fi

# Check if binary is executable
if [ ! -x "$JUST_BINARY" ]; then
    echo "Just binary is not executable: $JUST_BINARY" >&2
    echo "Run 'chmod +x $JUST_BINARY' to fix permissions" >&2
    exit 1
fi

# Execute the platform-specific just binary with all arguments
exec "$JUST_BINARY" "$@"
